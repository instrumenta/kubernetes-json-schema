{
  "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
  "properties": {
    "host": {
      "description": "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.",
      "type": [
        "string",
        "null"
      ]
    },
    "http": {
      "description": "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
      "properties": {
        "paths": {
          "description": "A collection of paths that map requests to backends.",
          "items": {
            "description": "HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.",
            "properties": {
              "backend": {
                "description": "IngressBackend describes all endpoints for a given service and port.",
                "properties": {
                  "serviceName": {
                    "description": "Specifies the name of the referenced service.",
                    "type": "string"
                  },
                  "servicePort": {
                    "oneOf": [
                      {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      {
                        "type": [
                          "integer",
                          "null"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "serviceName",
                  "servicePort"
                ],
                "type": "object"
              },
              "path": {
                "description": "Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "backend"
            ],
            "type": [
              "object",
              "null"
            ]
          },
          "type": "array"
        }
      },
      "required": [
        "paths"
      ],
      "type": [
        "object",
        "null"
      ]
    }
  },
  "type": "object",
  "$schema": "http://json-schema.org/schema#"
}