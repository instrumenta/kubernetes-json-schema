{
  "$schema": "http://json-schema.org/schema#", 
  "required": [
    "name"
  ], 
  "type": "object", 
  "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.", 
  "properties": {
    "portworxVolume": {
      "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
    }, 
    "glusterfs": {
      "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
    }, 
    "gitRepo": {
      "description": "GitRepo represents a git repository at a particular revision.", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
    }, 
    "flocker": {
      "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
    }, 
    "storageos": {
      "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
    }, 
    "iscsi": {
      "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
    }, 
    "projected": {
      "description": "Items for all in one resources secrets, configmaps, and downward API", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
    }, 
    "secret": {
      "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
    }, 
    "scaleIO": {
      "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
    }, 
    "photonPersistentDisk": {
      "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
    }, 
    "azureDisk": {
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
    }, 
    "fc": {
      "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.FCVolumeSource"
    }, 
    "flexVolume": {
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
    }, 
    "emptyDir": {
      "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
    }, 
    "persistentVolumeClaim": {
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
    }, 
    "configMap": {
      "description": "ConfigMap represents a configMap that should populate this volume", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
    }, 
    "rbd": {
      "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
    }, 
    "name": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
    }, 
    "azureFile": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
    }, 
    "quobyte": {
      "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
    }, 
    "hostPath": {
      "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
    }, 
    "nfs": {
      "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
    }, 
    "vsphereVolume": {
      "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
    }, 
    "cinder": {
      "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
    }, 
    "awsElasticBlockStore": {
      "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
    }, 
    "cephfs": {
      "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
    }, 
    "downwardAPI": {
      "description": "DownwardAPI represents downward API about the pod that should populate this volume", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
    }, 
    "gcePersistentDisk": {
      "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk", 
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
    }
  }
}