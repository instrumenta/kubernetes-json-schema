{
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "NodeSpec describes the attributes that a node is created with.", 
  "properties": {
    "unschedulable": {
      "type": "boolean", 
      "description": "Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration"
    }, 
    "configSource": {
      "type": "object", 
      "description": "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.", 
      "properties": {
        "configMap": {
          "required": [
            "namespace", 
            "name", 
            "kubeletConfigKey"
          ], 
          "type": "object", 
          "description": "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.", 
          "properties": {
            "kubeletConfigKey": {
              "type": "string", 
              "description": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases."
            }, 
            "resourceVersion": {
              "type": "string", 
              "description": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
            }, 
            "namespace": {
              "type": "string", 
              "description": "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases."
            }, 
            "uid": {
              "type": "string", 
              "description": "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
            }, 
            "name": {
              "type": "string", 
              "description": "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases."
            }
          }
        }
      }
    }, 
    "taints": {
      "items": {
        "required": [
          "key", 
          "effect"
        ], 
        "type": "object", 
        "description": "The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint.", 
        "properties": {
          "key": {
            "type": "string", 
            "description": "Required. The taint key to be applied to a node."
          }, 
          "timeAdded": {
            "type": "string", 
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.", 
            "format": "date-time"
          }, 
          "effect": {
            "type": "string", 
            "description": "Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute."
          }, 
          "value": {
            "type": "string", 
            "description": "Required. The taint value corresponding to the taint key."
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "If specified, the node's taints."
    }, 
    "podCIDR": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "PodCIDR represents the pod IP range assigned to the node."
    }, 
    "providerID": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>"
    }, 
    "externalID": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966"
    }
  }
}