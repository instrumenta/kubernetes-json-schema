{
  "description": "MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).", 
  "required": [
    "type"
  ], 
  "additionalProperties": false, 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "resource": {
      "additionalProperties": false, 
      "required": [
        "name"
      ], 
      "type": "object", 
      "description": "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.", 
      "properties": {
        "targetAverageUtilization": {
          "type": "integer", 
          "description": "targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.", 
          "format": "int32"
        }, 
        "name": {
          "type": "string", 
          "description": "name is the name of the resource in question."
        }, 
        "targetAverageValue": {
          "oneOf": [
            {
              "type": "string"
            }, 
            {
              "type": "integer"
            }
          ]
        }
      }
    }, 
    "object": {
      "additionalProperties": false, 
      "required": [
        "target", 
        "metricName", 
        "targetValue"
      ], 
      "type": "object", 
      "description": "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).", 
      "properties": {
        "averageValue": {
          "oneOf": [
            {
              "type": "string"
            }, 
            {
              "type": "integer"
            }
          ]
        }, 
        "targetValue": {
          "oneOf": [
            {
              "type": "string"
            }, 
            {
              "type": "integer"
            }
          ]
        }, 
        "metricName": {
          "type": "string", 
          "description": "metricName is the name of the metric in question."
        }, 
        "target": {
          "additionalProperties": false, 
          "required": [
            "kind", 
            "name"
          ], 
          "type": "object", 
          "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.", 
          "properties": {
            "kind": {
              "type": "string", 
              "description": "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\""
            }, 
            "name": {
              "type": "string", 
              "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }, 
            "apiVersion": {
              "type": "string", 
              "description": "API version of the referent"
            }
          }
        }, 
        "selector": {
          "additionalProperties": false, 
          "type": "object", 
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              }, 
              "type": "object", 
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
            }, 
            "matchExpressions": {
              "items": {
                "additionalProperties": false, 
                "required": [
                  "key", 
                  "operator"
                ], 
                "type": "object", 
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                "properties": {
                  "operator": {
                    "type": "string", 
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                  }, 
                  "values": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                  }, 
                  "key": {
                    "x-kubernetes-patch-merge-key": "key", 
                    "type": "string", 
                    "description": "key is the label key that the selector applies to.", 
                    "x-kubernetes-patch-strategy": "merge"
                  }
                }
              }, 
              "type": "array", 
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
            }
          }
        }
      }
    }, 
    "pods": {
      "additionalProperties": false, 
      "required": [
        "metricName", 
        "targetAverageValue"
      ], 
      "type": "object", 
      "description": "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.", 
      "properties": {
        "metricName": {
          "type": "string", 
          "description": "metricName is the name of the metric in question"
        }, 
        "targetAverageValue": {
          "oneOf": [
            {
              "type": "string"
            }, 
            {
              "type": "integer"
            }
          ]
        }, 
        "selector": {
          "additionalProperties": false, 
          "type": "object", 
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              }, 
              "type": "object", 
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
            }, 
            "matchExpressions": {
              "items": {
                "additionalProperties": false, 
                "required": [
                  "key", 
                  "operator"
                ], 
                "type": "object", 
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                "properties": {
                  "operator": {
                    "type": "string", 
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                  }, 
                  "values": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                  }, 
                  "key": {
                    "x-kubernetes-patch-merge-key": "key", 
                    "type": "string", 
                    "description": "key is the label key that the selector applies to.", 
                    "x-kubernetes-patch-strategy": "merge"
                  }
                }
              }, 
              "type": "array", 
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
            }
          }
        }
      }
    }, 
    "external": {
      "additionalProperties": false, 
      "required": [
        "metricName"
      ], 
      "type": "object", 
      "description": "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one \"target\" type should be set.", 
      "properties": {
        "targetValue": {
          "oneOf": [
            {
              "type": "string"
            }, 
            {
              "type": "integer"
            }
          ]
        }, 
        "metricName": {
          "type": "string", 
          "description": "metricName is the name of the metric in question."
        }, 
        "metricSelector": {
          "additionalProperties": false, 
          "type": "object", 
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.", 
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              }, 
              "type": "object", 
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
            }, 
            "matchExpressions": {
              "items": {
                "additionalProperties": false, 
                "required": [
                  "key", 
                  "operator"
                ], 
                "type": "object", 
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
                "properties": {
                  "operator": {
                    "type": "string", 
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                  }, 
                  "values": {
                    "items": {
                      "type": "string"
                    }, 
                    "type": "array", 
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                  }, 
                  "key": {
                    "x-kubernetes-patch-merge-key": "key", 
                    "type": "string", 
                    "description": "key is the label key that the selector applies to.", 
                    "x-kubernetes-patch-strategy": "merge"
                  }
                }
              }, 
              "type": "array", 
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed."
            }
          }
        }, 
        "targetAverageValue": {
          "oneOf": [
            {
              "type": "string"
            }, 
            {
              "type": "integer"
            }
          ]
        }
      }
    }, 
    "type": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "type is the type of metric source.  It should be one of \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object."
    }
  }
}