{
  "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).", 
  "required": [
    "weight", 
    "preference"
  ], 
  "additionalProperties": false, 
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "properties": {
    "preference": {
      "additionalProperties": false, 
      "type": "object", 
      "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.", 
      "properties": {
        "matchFields": {
          "items": {
            "additionalProperties": false, 
            "required": [
              "key", 
              "operator"
            ], 
            "type": "object", 
            "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
            "properties": {
              "operator": {
                "type": "string", 
                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
              }, 
              "values": {
                "items": {
                  "type": "string"
                }, 
                "type": "array", 
                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
              }, 
              "key": {
                "type": "string", 
                "description": "The label key that the selector applies to."
              }
            }
          }, 
          "type": "array", 
          "description": "A list of node selector requirements by node's fields."
        }, 
        "matchExpressions": {
          "items": {
            "additionalProperties": false, 
            "required": [
              "key", 
              "operator"
            ], 
            "type": "object", 
            "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.", 
            "properties": {
              "operator": {
                "type": "string", 
                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
              }, 
              "values": {
                "items": {
                  "type": "string"
                }, 
                "type": "array", 
                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch."
              }, 
              "key": {
                "type": "string", 
                "description": "The label key that the selector applies to."
              }
            }
          }, 
          "type": "array", 
          "description": "A list of node selector requirements by node's labels."
        }
      }
    }, 
    "weight": {
      "type": "integer", 
      "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.", 
      "format": "int32"
    }
  }
}